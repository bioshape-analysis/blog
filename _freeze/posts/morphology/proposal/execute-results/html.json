{
  "hash": "0d2fb96c5c6cc5c56a43c56c5c97b6a4",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Exploring the relation between cell shape and motility\"\nbibliography: references.bib\ndate: \"October 28 2024\" # Format example: August 9 2024\nauthor:\n  - name: \"Pavel Buklemishev\" \n\n  \ncategories: [Cell Morphology, Cell Migration, Differential Geometry] # \n\n\ncallout-icon: false\nformat:\n  html:\n    code-fold: true\n\nexecute:\n  echo: true\n  freeze: auto\n  warning: false\n\n---\n\n\n## Background\nCell morphology is an emerging field of biological research that examines the shape, size, and internal structure of cells to describe their state and the processes occurring within them. Today, more and more scientist across the world are investigating visible cellular transformations to predict cellular phenotypes. This research has significant practical implications: understanding specific cellular features characteristic of certain diseases, such as cancer, could lead to new approaches for early detection and classification.\n\nIn this work, we will explore aspects of cell motility by analyzing the changing shapes of migrating cells. As a cell moves through space, it reorganizes its membrane, cytosol, and cytoskeletal structures [@Mogilner_Oster_1996]. For example, past experimental studies show that actin polymerization causes protrusions at the leading edge of a cell, forming specific structures known as lamellipodia and filopodia [@Lauffenburger_Horwitz_1996], while cells elongate along the direction they move[@SenGupta_Parent_Bear_2021]. \n\n\n## Goals\nOur goal is to perform a differential geometry analysis of cellular shape curves to explore the correlation between shape differences and spatial displacement. Using the Riemann Elastic Metric[@10.1007/978-3-031-38299-4_60]:\n\n$$ \ng_c^{a, b}(h, k) = a^2 \\int_{[0,1]} \\langle D_s h, N \\rangle \\langle D_s k, N \\rangle \\, ds \n+ b^2 \\int_{[0,1]} \\langle D_s h, T \\rangle \\langle D_s k, T \\rangle \\, ds \n$$\n\n\nwe can estimate the geodesic distance between two cellular boundary curves to mathematically describe how the cell shape changes over time. To implement this algorithm, we will use the Python Geomstats package.\n\n\n## Dataset\n\nThis dataset contains real cell contours obtained via fluorescent microscopy in Professor Prasad's lab, segmented by Clément Soubrier. \n\n- **204 directories**:  \n  Each directory is named `cell_*`, representing an individual cell.  \n\n- **Frames**:  \n  Subdirectories inside each cell are named `frame_*`, capturing different time points for that cell.  \n\n### NumPy Array Objects in Each Frame  \n- **centroid.npy**: Stores the coordinates of the cell's centroid.  \n- **outline.npy**: Contains segmented points as Cartesian coordinates.  \n- **time.npy**: Timestamp of the frame.\n\n### Structure  \n\n```bash\n├── cell_i\n│   ├── frame_j\n│   │   ├── centroid.npy\n│   │   ├── outline.npy\n│   │   └── time.npy\n│   ├── frame_k\n│   │   ├── centroid.npy\n│   │   ├── outline.npy\n│   │   └── time.npy\n│   └── ...\n├── cell_l\n│   ├── frame_m\n│   │   ├── centroid.npy\n│   │   ├── outline.npy\n│   │   └── time.npy\n│   └── ...\n└── ...\n```\n<!--\n![](img/all_cells.png){ width=65% style=\"display: block; margin-left: auto; margin-right: auto;\" }\n-->\n\n## Single cell dynamics\n\nIn this section, we provide the code which allows to demonstrate the temporary-spatial cell dynamics. In this particular example we are visualizing the shapes and position of dataset cell №15 @fig-img which we will be investigated in the project.\n\n::: {#915f0603 .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport os\n\nfig, ax = plt.subplots(figsize=(10, 10), layout='constrained')\n\nN = 15\n\nnumber_of_frames = sum(os.path.isdir(os.path.join(f\"cells/cell_{N}\", entry)) for entry in os.listdir(f\"cells/cell_{N}\"))\ncolors = plt.cm.tab20(np.linspace(0, 1, number_of_frames))\nfor i in range(1,number_of_frames+1):\n    time = np.load(f'cells/cell_{N}/frame_{i}/time.npy')\n    border = np.load(f'cells/cell_{N}/frame_{i}/outline.npy')\n    centroid = np.load(f'cells/cell_{N}/frame_{i}/centroid.npy')\n\n    \n    color = colors[i - 1]\n\n    ax.plot(border[:, 0], border[:, 1], label=time, color=color)\n    ax.scatter(centroid[0], centroid[1], color=color)\nplt.legend()    \n\nplt.savefig(f\"single_cell_{N}.png\", dpi=300, bbox_inches='tight')\n```\n:::\n\n\n![The cell #15 in different time moments. The colored curves visualize the cell shape in different time moments, the colored dots are centroids. Each color corresponds to a certain time moment which is shown in the legend.](img/single_cell_15.png){#fig-img}\n \n\n\n## References\n\n::: {#refs}\n:::\n\n",
    "supporting": [
      "proposal_files"
    ],
    "filters": [],
    "includes": {}
  }
}