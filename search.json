[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/ribosome-tunnel-extraction/index.html",
    "href": "posts/ribosome-tunnel-extraction/index.html",
    "title": "Ribosome Exit Tunnel Geometry",
    "section": "",
    "text": "The ribosome is a complex molecular machine composed of ribosomal RNA (rRNA) and proteins.\nIt is central to the protein synthesis in all living organisms. The assembly of most proteins happens at the location known as the Peptidyl Transferse Center, where the peptide chain of any given protein is extended with another amino acid like a chain of beads, one bead a time.\nThe built protein exits the ribosome through a channel known as the Ribosome Exit Tunnel. The interior geometry of the tunnel influences the escape speed of proteins and can be blocked by ligands and antibiotics making it a crucial site for all processes of life.\nHere, we are interested in obtaining a representation of the Exit Tunel’s geometry and describe a protocol for doing so.\n\n\n\n\n\n\n\n\n\nPDB 8OJ0. The structure of human ribosome.\n\n\n\n\n\n\n\nThe locations of the ribosome exit tunnel and the PTC."
  },
  {
    "objectID": "posts/ribosome-tunnel-extraction/index.html#the-ribosome-and-its-exit-tunnel",
    "href": "posts/ribosome-tunnel-extraction/index.html#the-ribosome-and-its-exit-tunnel",
    "title": "Ribosome Exit Tunnel Geometry",
    "section": "",
    "text": "The ribosome is a complex molecular machine composed of ribosomal RNA (rRNA) and proteins.\nIt is central to the protein synthesis in all living organisms. The assembly of most proteins happens at the location known as the Peptidyl Transferse Center, where the peptide chain of any given protein is extended with another amino acid like a chain of beads, one bead a time.\nThe built protein exits the ribosome through a channel known as the Ribosome Exit Tunnel. The interior geometry of the tunnel influences the escape speed of proteins and can be blocked by ligands and antibiotics making it a crucial site for all processes of life.\nHere, we are interested in obtaining a representation of the Exit Tunel’s geometry and describe a protocol for doing so.\n\n\n\n\n\n\n\n\n\nPDB 8OJ0. The structure of human ribosome.\n\n\n\n\n\n\n\nThe locations of the ribosome exit tunnel and the PTC."
  },
  {
    "objectID": "posts/ribosome-tunnel-extraction/index.html#tunnel-geometry-extraction-visual-protocol",
    "href": "posts/ribosome-tunnel-extraction/index.html#tunnel-geometry-extraction-visual-protocol",
    "title": "Ribosome Exit Tunnel Geometry",
    "section": "Tunnel Geometry Extraction: Visual Protocol",
    "text": "Tunnel Geometry Extraction: Visual Protocol\n\n\n\nSchematic representation of the tunnel geometry surface reconstruction"
  },
  {
    "objectID": "posts/ribosome-tunnel-extraction/index.html#mole-based-centerline-extraction",
    "href": "posts/ribosome-tunnel-extraction/index.html#mole-based-centerline-extraction",
    "title": "Ribosome Exit Tunnel Geometry",
    "section": "0. Mole-based centerline extraction",
    "text": "0. Mole-based centerline extraction\nOne representation of the ribosome exit tunnel can be obtained via the MOLE software, which is an implementation of the “probe”-based family of algorithms popular for extracting general biomolecular cavities and pores. This step is non-essential if other means of extracting the intial pointcloud are available, but for convenience this will be our starting point.\nA probe is a sphere of varying radius which is “rolled” by the algorithm against the walls of a given molecule tracing out a path and a radius.\nThe algorithm yields an array of varying x,y,z coordinates (henceforth, the \\(C\\)\\(x,y,z\\)) and radius R at each coordinate (henceforth, the \\(R\\)\\(x,y,z\\))"
  },
  {
    "objectID": "posts/ribosome-tunnel-extraction/index.html#bounding-box",
    "href": "posts/ribosome-tunnel-extraction/index.html#bounding-box",
    "title": "Ribosome Exit Tunnel Geometry",
    "section": "1. Bounding Box",
    "text": "1. Bounding Box\nThis step captures the subset of atoms enclosing the cavity of interest (the tunnel) from the original structure.\n\n\n\n\n\n\nParameters\n\n\n\n\n\n\\(R_{\\mathbf{expansion}}\\): define the radius of expansion to be the value added to \\(R_{x,y,z}\\) of the centerline at every \\(C_{x,y,z}\\)\n\\(B\\): The smallest bounding box containing all of the coordinates formed by the expanded centerline\n\\(R_{\\mathbf{vdw}}\\): Van der Waals radius of an atom in Ångstroms. Default to the value of 2.\n\\(pc_{B}\\): The pointcloud formed by applying \\(B\\) to the original structure and widening each atom coordinate to include points withing a sphere with radius \\(R_{\\mathbf{vdw}}\\)\n\n\n\n\nFor each \\(C_{x,y,z}\\), capture atoms whose center belongs to the sphere formed by \\(R_{x,y,z} + R_{\\mathbf{expansion}}\\), filter out duplicates. Call this coordinate set the \\({\\textit{Centerline Expansion Atoms}}\\).\nCalculate the coordinates of the bounding box \\(B\\) around the \\(\\text{\\textit{Centerline Expansion Atoms}}\\).\nApply \\(B\\) to the initial structure to extract all atoms that belong to \\(B\\). Call this \\(\\mathbf{pc^{B}}\\).\nWiden each coordinate (atom center) \\(C_{x,y,z}^{pc_{B}}\\) inside \\(pc_{B}\\) by \\(R_{vdw}\\) to include a more realistic representation of atoms. This is done by creating a voxel subgrid whose bounding cube is between \\((C_{x}^{pc_{B}}-R_{vdw},C_{y}^{pc_{B}}-R_{vdw},C_{z}^{pc_{B}}-R_{vdw})\\) and \\((C_{x}^{pc_{B}}+R_{vdw},C_{y}^{pc_{B}}+R_{vdw},C_{z}^{pc_{B}}+R_{vdw})\\), a cube of indices centered at \\(C_{x,y,z}^{pc_{B}}\\). The resultant coordinate set is \\(\\mathbf{pc_{B}}\\).\nAnchor the coordinates of the \\(pc_{B}\\) to the origin by subtracting the \\(\\mu(pc_{B})\\) of the coordinate set from each \\(C_{x,y,z}^{pc_{B}}\\) and then shifting each \\(C_{x,y,z}^{pc_{B}}\\) upwards by \\(|\\min(x,y,z)|\\). This is done to reduce the amount of empty voxel cells in the following steps, reduce compute."
  },
  {
    "objectID": "posts/ribosome-tunnel-extraction/index.html#voxelization",
    "href": "posts/ribosome-tunnel-extraction/index.html#voxelization",
    "title": "Ribosome Exit Tunnel Geometry",
    "section": "2. Voxelization",
    "text": "2. Voxelization\n\nAssume voxel size of \\(1\\) in correspondence to the units of the dataset, Angstroms in our case. (Alternatively, atom-to-sphere expansion in step 1. Bounding Box should be accordingly scaled).\nCreate a boolean voxel grid with the dimensions of the (\\(pc_{B}\\) + \\(1\\)), call this the \\(Grid_{index}\\) (as opposed to \\(Grid_{coordinate}\\))\nSet voxels at index [\\(C_{x},C_{y},C_{z}\\)] for every \\(C\\) in \\(pc_{B}\\) in the \\(Grid_{index}\\) to \\(1\\). All other voxel are \\(0\\)."
  },
  {
    "objectID": "posts/ribosome-tunnel-extraction/index.html#inversion",
    "href": "posts/ribosome-tunnel-extraction/index.html#inversion",
    "title": "Ribosome Exit Tunnel Geometry",
    "section": "3. Inversion",
    "text": "3. Inversion\nInvert the \\(Grid_{index}\\) to create a representation of the “empty space” inside the exit tunnel."
  },
  {
    "objectID": "posts/ribosome-tunnel-extraction/index.html#dbscan",
    "href": "posts/ribosome-tunnel-extraction/index.html#dbscan",
    "title": "Ribosome Exit Tunnel Geometry",
    "section": "4. DBSCAN",
    "text": "4. DBSCAN\nThe aim in this step is to extract only the voxels belonging to the “empty space” inside the tunnel and no other. Given that we have a good idea of the Van der Waals radii of the atoms that constitute the walls and have control over the size of the voxel in the \\(Grid_{index}\\), one method that we can apply is DBSCAN.\nDBSCAN is a density-based clustering non-parametric algorithm that is akin to UMAP/t-SNE.\n\n\n\n\n\n\nDBSCAN Parameters\n\n\n\n\n\n\\(eps\\): The maximum distance between two samples for one to be considered as in the neighborhood of the other. This is the most important DBSCAN parameter to choose appropriately for your data set and distance function.\n\\(min\\_nbrs\\) (\\(min\\_samples\\)): If \\(min\\_samples\\) is set to a higher value, DBSCAN will find denser clusters, whereas if it is set to a lower value, the found clusters will be more sparse. The metric to use when calculating distance between instances in a feature array.\n\\(metric\\): The metric to use when calculating distance between instances in a feature array. We use the Euclidian distance."
  },
  {
    "objectID": "posts/ribosome-tunnel-extraction/index.html#interior-surface-via-delaunay-triangulation",
    "href": "posts/ribosome-tunnel-extraction/index.html#interior-surface-via-delaunay-triangulation",
    "title": "Ribosome Exit Tunnel Geometry",
    "section": "5. Interior Surface via Delaunay Triangulation",
    "text": "5. Interior Surface via Delaunay Triangulation\nThe aim of this step is to extract a point cloud containing only the voxels on the surface of convex hull enclosing the interior space of the tunnel.\n\n\n\n\n\n\nDelaunay 3D parameters\n\n\n\n\n\n\\(alpha\\): Controls the smoothness of the constructed alpha-shape. For a non-zero \\(alpha\\) value, only vertices, edges, faces, or tetrahedra contained within the circumsphere (of radius \\(alpha\\)) will be output. Otherwise, only tetrahedra will be output.\n\\(tol\\): Tolerance to control discarding of closely spaced points. This tolerance is specified as a fraction of the diagonal length of the bounding box of the points.\n\\(offset\\): Multiplier to control the size of the initial, bounding Delaunay triangulation."
  },
  {
    "objectID": "posts/ribosome-tunnel-extraction/index.html#normal-estimation-orientation",
    "href": "posts/ribosome-tunnel-extraction/index.html#normal-estimation-orientation",
    "title": "Ribosome Exit Tunnel Geometry",
    "section": "6. Normal Estimation & Orientation",
    "text": "6. Normal Estimation & Orientation\nThe aim of this step is to prepare the convex hull point cloud for the surface reconstruction algorithm. For the final mesh to be smooth and free of artifacts, this step has to assign a normal vector point outwards at each point of the convex hull thus defining a clear boundary between “inner” and “outer” space vis-a-vis the surface.\nOne popular method for normal estimation is a KDTree search and for smoothing their orientations a collection of tangent planes is used.\n\n\n\n\n\n\nKD Tree Search and Tangent Plane Orientation\n\n\n\n\n\n\\(kdtree\\_radius\\):\n\\(kdtree\\_max\\_nn\\):\n\\(tangent\\_planes\\_n\\):"
  },
  {
    "objectID": "posts/ribosome-tunnel-extraction/index.html#surface-reconstruction",
    "href": "posts/ribosome-tunnel-extraction/index.html#surface-reconstruction",
    "title": "Ribosome Exit Tunnel Geometry",
    "section": "7. Surface Reconstruction",
    "text": "7. Surface Reconstruction"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "bioshape-analysis",
    "section": "",
    "text": "Post With Code\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nJul 9, 2024\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nJul 6, 2024\n\n\nTristan O’Malley\n\n\n\n\n\n\n\n\n\n\n\n\nRibosome Exit Tunnel Geometry\n\n\nExtraction Protocol via Space Partioning and DBSCAN\n\n\n\nbiology\n\n\nbioinformatics\n\n\nsurface-reconstruction\n\n\ncomputer graphics\n\n\n\n\n\n\n\n\n\nJun 29, 2024\n\n\nArtem Kushner, Khanh Dao Duc\n\n\n\n\n\n\nNo matching items"
  }
]